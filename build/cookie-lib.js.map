{"version":3,"sources":["../src/cookie-lib.js"],"names":["load","select","save","remove","setRawCookie","plugToRequest","deleteAllCookies","IS_NODE","document","_rawCookie","_res","undefined","_isResWritable","headersSent","name","doNotParse","cookies","parse","cookie","cookieVal","JSON","e","regex","Object","keys","reduce","accumulator","test","newCookie","val","opt","serialize","path","expires","Date","maxAge","clearCookie","rawCookie","req","res","headers","unplug","forEach"],"mappings":";;;;;QAWgBA,I,GAAAA,I;QAmBAC,M,GAAAA,M;QAuBAC,I,GAAAA,I;QAmBAC,M,GAAAA,M;QAwBAC,Y,GAAAA,Y;QAQAC,a,GAAAA,a;QAmBAC,gB,GAAAA,gB;;AA3HhB;;;;AACA;;;;;;AAEA,IAAMC,UAAU,OAAOC,QAAP,KAAoB,WAApC;AACA,IAAIC,aAAa,EAAjB;AACA,IAAIC,OAAOC,SAAX;;AAEA,SAASC,cAAT,GAA0B;AACxB,SAAOF,QAAQ,CAACA,KAAKG,WAArB;AACD;;AAEM,SAASb,IAAT,CAAcc,IAAd,EAAoBC,UAApB,EAAgC;AACrC,MAAMC,UAAUT,UAAUE,UAAV,GAAuB,iBAAOQ,KAAP,CAAaT,SAASU,MAAtB,CAAvC;AACA,MAAIC,YAAYH,WAAWA,QAAQF,IAAR,CAA3B;;AAEA;AACA;AACA;;AAEA,MAAI,CAACC,UAAL,EAAiB;AACf,QAAI;AACFI,kBAAYC,KAAKH,KAAL,CAAWE,SAAX,CAAZ;AACD,KAFD,CAEE,OAAME,CAAN,EAAS;AACT;AACD;AACF;;AAED,SAAOF,SAAP;AACD;;AAEM,SAASlB,MAAT,CAAgBqB,KAAhB,EAAuB;AAC5B,MAAMN,UAAUT,UAAUE,UAAV,GAAuB,iBAAOQ,KAAP,CAAaT,SAASU,MAAtB,CAAvC;;AAEA,MAAI,CAACF,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAI,CAACM,KAAL,EAAY;AACV,WAAON,OAAP;AACD;;AAED,SAAOO,OAAOC,IAAP,CAAYR,OAAZ,EACJS,MADI,CACG,UAASC,WAAT,EAAsBZ,IAAtB,EAA4B;AAClC,QAAI,CAACQ,MAAMK,IAAN,CAAWb,IAAX,CAAL,EAAuB;AACrB,aAAOY,WAAP;AACD;;AAED,QAAIE,YAAY,EAAhB;AACAA,cAAUd,IAAV,IAAkBE,QAAQF,IAAR,CAAlB;AACA,WAAO,4BAAa,EAAb,EAAiBY,WAAjB,EAA8BE,SAA9B,CAAP;AACD,GATI,EASF,EATE,CAAP;AAUD;;AAEM,SAAS1B,IAAT,CAAcY,IAAd,EAAoBe,GAApB,EAAyBC,GAAzB,EAA8B;;AAEnCrB,aAAWK,IAAX,IAAmBe,GAAnB;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAI,CAACtB,OAAL,EAAc;AACZC,aAASU,MAAT,GAAkB,iBAAOa,SAAP,CAAiBjB,IAAjB,EAAuBL,WAAWK,IAAX,CAAvB,EAAyCgB,GAAzC,CAAlB;AACD;;AAED,MAAIlB,oBAAoBF,KAAKQ,MAA7B,EAAqC;AACnCR,SAAKQ,MAAL,CAAYJ,IAAZ,EAAkBe,GAAlB,EAAuBC,GAAvB;AACD;AACF;;AAEM,SAAS3B,MAAT,CAAgBW,IAAhB,EAAsBgB,GAAtB,EAA2B;AAChC,SAAOrB,WAAWK,IAAX,CAAP;;AAEA,MAAI,OAAOgB,GAAP,KAAe,WAAnB,EAAgC;AAC9BA,UAAM,EAAN;AACD,GAFD,MAEO,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAClC;AACAA,UAAM,EAAEE,MAAMF,GAAR,EAAN;AACD,GAHM,MAGA;AACL;AACAA,UAAM,4BAAa,EAAb,EAAiBA,GAAjB,CAAN;AACD;;AAED,MAAI,OAAOtB,QAAP,KAAoB,WAAxB,EAAqC;AACnCsB,QAAIG,OAAJ,GAAc,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,CAAd;AACAJ,QAAIK,MAAJ,GAAa,CAAb;AACA3B,aAASU,MAAT,GAAkB,iBAAOa,SAAP,CAAiBjB,IAAjB,EAAuB,EAAvB,EAA2BgB,GAA3B,CAAlB;AACD;;AAED,MAAIlB,oBAAoBF,KAAK0B,WAA7B,EAA0C;AACxC1B,SAAK0B,WAAL,CAAiBtB,IAAjB,EAAuBgB,GAAvB;AACD;AACF;;AAEM,SAAS1B,YAAT,CAAsBiC,SAAtB,EAAiC;AACtC,MAAIA,SAAJ,EAAe;AACb5B,iBAAa,iBAAOQ,KAAP,CAAaoB,SAAb,CAAb;AACD,GAFD,MAEO;AACL5B,iBAAa,EAAb;AACD;AACF;;AAEM,SAASJ,aAAT,CAAuBiC,GAAvB,EAA4BC,GAA5B,EAAiC;AACtC,MAAID,IAAIpB,MAAR,EAAgB;AACdT,iBAAa6B,IAAIpB,MAAjB;AACD,GAFD,MAEO,IAAIoB,IAAItB,OAAR,EAAiB;AACtBP,iBAAa6B,IAAItB,OAAjB;AACD,GAFM,MAEA,IAAIsB,IAAIE,OAAJ,IAAeF,IAAIE,OAAJ,CAAYtB,MAA/B,EAAuC;AAC5Cd,iBAAakC,IAAIE,OAAJ,CAAYtB,MAAzB;AACD,GAFM,MAEA;AACLT,iBAAa,EAAb;AACD;;AAEDC,SAAO6B,GAAP;;AAEA,SAAO,SAASE,MAAT,GAAkB;AACvB/B,WAAO,IAAP;AACAD,iBAAa,EAAb;AACD,GAHD;AAID;;AAEM,SAASH,gBAAT,GAA4B;AACjC;AACAiB,SAAOC,IAAP,CAAYvB,OAAO,eAAP,CAAZ,EAAqCyC,OAArC,CAA6C;AAAA,WAAQvC,OAAOW,IAAP,EAAa,EAAEkB,MAAM,GAAR,EAAb,CAAR;AAAA,GAA7C;AACD;;kBAEc;AACb5B,4BADa;AAEbJ,YAFa;AAGbC,gBAHa;AAIbC,YAJa;AAKbC,gBALa;AAMbE;AANa,C","file":"cookie-lib.js","sourcesContent":["import cookie from 'cookie';\nimport objectAssign from 'object-assign';\n\nconst IS_NODE = typeof document === 'undefined';\nlet _rawCookie = {};\nlet _res = undefined;\n\nfunction _isResWritable() {\n  return _res && !_res.headersSent;\n}\n\nexport function load(name, doNotParse) {\n  const cookies = IS_NODE ? _rawCookie : cookie.parse(document.cookie);\n  let cookieVal = cookies && cookies[name];\n\n  // if (typeof doNotParse === 'undefined') {\n  //   doNotParse = !cookieVal || (cookieVal[0] !== '{' && cookieVal[0] !== '[' && cookieVal !== 'true' && cookieVal !== 'false');\n  // }\n\n  if (!doNotParse) {\n    try {\n      cookieVal = JSON.parse(cookieVal);\n    } catch(e) {\n      // Not serialized object\n    }\n  }\n\n  return cookieVal;\n}\n\nexport function select(regex) {\n  const cookies = IS_NODE ? _rawCookie : cookie.parse(document.cookie);\n\n  if (!cookies) {\n    return {};\n  }\n\n  if (!regex) {\n    return cookies;\n  }\n\n  return Object.keys(cookies)\n    .reduce(function(accumulator, name) {\n      if (!regex.test(name)) {\n        return accumulator;\n      }\n\n      let newCookie = {};\n      newCookie[name] = cookies[name];\n      return objectAssign({}, accumulator, newCookie);\n    }, {});\n}\n\nexport function save(name, val, opt) {\n\n  _rawCookie[name] = val;\n\n  // allow you to work with cookies as objects.\n  // if (typeof val === 'object') {\n  //   _rawCookie[name] = JSON.stringify(val);\n  // }\n\n  // Cookies only work in the browser\n  if (!IS_NODE) {\n    document.cookie = cookie.serialize(name, _rawCookie[name], opt);\n  }\n\n  if (_isResWritable() && _res.cookie) {\n    _res.cookie(name, val, opt);\n  }\n}\n\nexport function remove(name, opt) {\n  delete _rawCookie[name];\n\n  if (typeof opt === 'undefined') {\n    opt = {};\n  } else if (typeof opt === 'string') {\n    // Will be deprecated in future versions\n    opt = { path: opt };\n  } else {\n    // Prevent mutation of opt below\n    opt = objectAssign({}, opt);\n  }\n\n  if (typeof document !== 'undefined') {\n    opt.expires = new Date(1970, 1, 1, 0, 0, 1);\n    opt.maxAge = 0;\n    document.cookie = cookie.serialize(name, '', opt);\n  }\n\n  if (_isResWritable() && _res.clearCookie) {\n    _res.clearCookie(name, opt);\n  }\n}\n\nexport function setRawCookie(rawCookie) {\n  if (rawCookie) {\n    _rawCookie = cookie.parse(rawCookie);\n  } else {\n    _rawCookie = {};\n  }\n}\n\nexport function plugToRequest(req, res) {\n  if (req.cookie) {\n    _rawCookie = req.cookie;\n  } else if (req.cookies) {\n    _rawCookie = req.cookies;\n  } else if (req.headers && req.headers.cookie) {\n    setRawCookie(req.headers.cookie);\n  } else {\n    _rawCookie = {};\n  }\n\n  _res = res;\n\n  return function unplug() {\n    _res = null;\n    _rawCookie = {};\n  };\n}\n\nexport function deleteAllCookies() {\n  /** Clear all cookies starting with 'rentspree' (to get all cookies, omit regex argument) */\n  Object.keys(select(/^rentspree.*/i)).forEach(name => remove(name, { path: '/' }))\n}\n\nexport default {\n  setRawCookie,\n  load,\n  select,\n  save,\n  remove,\n  plugToRequest,\n};"]}